version: 0.2
env:
  parameter-store:
    DOCKER_REGISTRY_USERNAME: /golang-app/docker-credentials/username
    DOCKER_REGISTRY_PASSWORD: /golang-app/docker-credentials/password
    DOCKER_REGISTRY_URL: /golang-app/docker-credentials/url

phases:
  install:
    commands:
      - echo "Installing Docker..."
      - yum install -y docker
      - echo "Starting Docker..."
      - sudo systemctl start docker || nohup dockerd >/var/log/dockerd.log 2>&1 &
      - echo "Installing kubectl..."
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/
  pre_build:
    commands:
      - echo "Logging in to Docker registry..."
      - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin "$DOCKER_REGISTRY_URL"
      - echo "Setting up kubeconfig for EKS..."
      - aws eks update-kubeconfig --region us-east-1 --name Dev-cluster
      - echo "Validating EKS cluster login..."
      - kubectl config current-context
  build:
    commands:
      - echo "Building Docker image..."
      - docker build -t "$DOCKER_REGISTRY_USERNAME/short_url:$CODEBUILD_RESOLVED_SOURCE_VERSION" .
      - echo "Pushing Docker image..."
      - docker push "$DOCKER_REGISTRY_USERNAME/short_url:$CODEBUILD_RESOLVED_SOURCE_VERSION"
  post_build:
    commands:
      - echo "Deploying application to EKS..."
      - kubectl set image deployment/shorturl shortenurlapp="$DOCKER_REGISTRY_USERNAME/short_url:$CODEBUILD_RESOLVED_SOURCE_VERSION" --namespace=default
      - echo "Verifying deployment rollout..."
      - kubectl rollout status deployment/shorturl --namespace=default
      - echo "Fetching service details..."
      - kubectl get svc --namespace=default
artifacts:
  files:
    - '**/*'
