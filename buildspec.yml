# version: 0.2
# env:
#   parameter-store:
#     DOCKER_REGISTRY_USERNAME: /golang-app/docker-credentials/username
#     DOCKER_REGISTRY_PASSWORD: /golang-app/docker-credentials/password
#     DOCKER_REGISTRY_URL: /golang-app/docker-credentials/url

# phases:
#   install:
#     commands:
#       - echo "Installing dependencies..."
#       - yum install -y docker
#       - echo "Starting Docker..."
#       - nohup dockerd >/var/log/dockerd.log 2>&1 &
#       - echo "Waiting for Docker to start..."
#       - sleep 15
#       - docker info
#       - echo "Installing kubectl..."
#       - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
#       - chmod +x kubectl
#       - mv kubectl /usr/local/bin/
#       - echo "Updating AWS CLI to the latest version..."
#       - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
#       - unzip awscliv2.zip
#       - sudo ./aws/install --update
#       - aws --version
#   pre_build:
#     commands:
#       - echo "Logging in to Docker Hub..."
#       - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin "$DOCKER_REGISTRY_URL"
#       - echo "Setting up kubeconfig for EKS..."
#       - aws eks update-kubeconfig --region us-east-1 --name Dev-cluster
#       - echo "Validating Kubernetes context..."
#       - kubectl config view
#       - kubectl get nodes
#   build:
#     commands:
#       - echo "Building Docker image..."
#       - docker build -t "$DOCKER_REGISTRY_USERNAME/short_url:$CODEBUILD_RESOLVED_SOURCE_VERSION" .
#       - echo "Pushing Docker image to Docker Hub..."
#       - docker push "$DOCKER_REGISTRY_USERNAME/short_url:$CODEBUILD_RESOLVED_SOURCE_VERSION"
#   post_build:
#     commands:
#       - echo "Deploying application to EKS..."
#       - kubectl set image deployment/shorturl shortenurlapp="$DOCKER_REGISTRY_USERNAME/short_url:$CODEBUILD_RESOLVED_SOURCE_VERSION" --namespace=default
#       - kubectl rollout status deployment/shorturl --namespace=default
#       - echo "Deployment completed successfully."
# artifacts:
#   files:
#     - '**/*'

version: 0.2
run-as: root

env: 
  parameter-store:
    DOCKER_REGISTRY_USERNAME: /golang-app/docker-credentials/username
    DOCKER_REGISTRY_PASSWORD: /golang-app/docker-credentials/password
    DOCKER_REGISTRY_URL: /golang-app/docker-credentials/url

phases:
  install: 
    commands:
      - echo Installing dependencies...
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/
  pre_build:
    commands:
      - echo "Logging to DockerHub"
      - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin $DOCKER_REGISTRY_URL
      - aws sts get-caller-identity
      - aws eks update-kubeconfig --region us-east-1 --name Dev-cluster --role-arn arn:aws:iam::977098995238:role/service-role/codebuild-short-url-service-role
      - kubectl config current-context

  build:
    commands: 
      - echo "Building Docker Image"
      - docker build -t "$DOCKER_REGISTRY_USERNAME/short_url:$CODEBUILD_RESOLVED_SOURCE_VERSION" .
      - docker push "$DOCKER_REGISTRY_USERNAME/short_url:$CODEBUILD_RESOLVED_SOURCE_VERSION"

  post_build:
    commands:
      - echo "Docker Image is Pushed"
      - echo "You can Deploying the application to EKS now using ArgoCD"
      # - kubectl set image deployment/shorturl shortenurlapp=$DOCKER_USERNAME/short_url:$CODEBUILD_RESOLVED_SOURCE_VERSION
      # - kubectl get svc